% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/homework5_sol.R
\name{newton_step_smw_sol}
\alias{newton_step_smw_sol}
\title{Compute Newton Step (Naive) for HSVM}
\usage{
newton_step_smw_sol(X, y, beta, g, lambda, delta)
}
\arguments{
\item{X}{Design matrix}

\item{y}{Binary response vector}

\item{g}{Gradient vector}

\item{lambda}{Regularization parameter}

\item{delta}{shape parameter}
}
\description{
Compute Newton Step (Naive) for HSVM
}
\examples{
set.seed(12345)
n1 <- n2 <- 1e2; n <- n1 + n2
p <- 1e3
mu1 <- sqrt(30)*matrix(abs(rnorm(p)), ncol=1)
X <- matrix(rnorm(n*p), n, p)
X[1:n1,] <-X[1:n1,] + matrix(rep(mu1, n1), n1, p, byrow=TRUE)
y <- rep(-1,n)
y[1:n1] <- 1
g <- matrix(rnorm(p), ncol=1)
beta <- matrix(rnorm(p), ncol=1)
lambda <- 1
delta <- 1
system.time({db_smw <- newton_step_smw_sol(X, y, beta, g, lambda, delta)})
system.time({db_naive <- newton_step_naive_sol(X, y, beta, g, lambda, delta)})
plot(db_naive,  db_smw)
abline(0,1)
}
